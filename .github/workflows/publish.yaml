name: Create and publish Docker images

on:
  push:
    branches: 
      - master
      - main
    tags:
      - 'v*'
env:
  REGISTRY: ghcr.io
  IMAGE_NAME_DIST: avtools-osadl-debian
  IMAGE_NAME_SOURCE: avtools-osadl-debian-source
  IMAGE_NAME: avtools-osadl-debian-non-dist

jobs:
  
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
        contents: read
        packages: write

    steps:
      
      - name: Checkout repo
        uses: actions/checkout@v2
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        

      - name: Inspect builder
        run: |
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
# NOTE: until further, dont' build the non-dist
#     - name: Extract metadata (tags, labels) for non distribution image 
#       id: meta
#       uses: docker/metadata-action@v3
#       with:
#         images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
#         flavor: |
#           latest=true
#         tags: |
#           type=raw,value={{branch}},priority=1,enable=${{ !startsWith(github.ref, 'refs/tags/v') }}
#           type=ref,event=tag,priority=2
#           type=raw,value=${{ env.IMAGE_NAME }}-{{branch}}-{{date 'YYYYMMDD'}}-{{sha}},priority=31,enable=${{ !startsWith(github.ref, 'refs/tags/v') }}
#           type=raw,value=${{ env.IMAGE_NAME }}-{{tag}}-{{date 'YYYYMMDD'}}-{{sha}},priority=32, enable=${{ startsWith(github.ref, 'refs/tags/v') }}
      
      - name: Build dependency layer for caching
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/Dockerfile.osadl.debian
          cache-to: type=gha,mode=max
          platforms: linux/amd64
          push: false
          target: dependencies

# NOTE: until further, dont' build the non-dist
#     - name: Build and push non distribution Image
#       uses: docker/build-push-action@v2
#       with:
#         context: .
#         file: docker/Dockerfile.osadl.debian
#         cache-from: type=gha
#         platforms: linux/amd64,linux/arm64
#         push: true
#         tags: ${{ steps.meta.outputs.tags }}
#         labels: ${{ steps.meta.outputs.labels }}
#         target: distribution

      - name: Extract metadata (tags, labels) for distribution image
        id: metadist
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME_DIST }}
          flavor: |
            latest=true
          tags: |
            type=raw,value={{branch}},priority=1,enable=${{ !startsWith(github.ref, 'refs/tags/v') }}
            type=ref,event=tag,priority=2
            type=raw,value=${{ env.IMAGE_NAME }}-{{branch}}-{{date 'YYYYMMDD'}}-{{sha}},priority=31,enable=${{ !startsWith(github.ref, 'refs/tags/v') }}
            type=raw,value=${{ env.IMAGE_NAME }}-{{tag}}-{{date 'YYYYMMDD'}}-{{sha}},priority=32, enable=${{ startsWith(github.ref, 'refs/tags/v') }}
      
      - name: Build and push distribution image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/Dockerfile.osadl.debian
          cache-from: type=gha
          cache-to: type=gha,mode=min
          platforms: linux/amd64
          push: true
          tags: ${{ steps.metadist.outputs.tags }}
          build-args: |
                  FFMPEG_BREW_OPTIONS=--without-fdk-aac
          labels: ${{ steps.metadist.outputs.labels }}
          target: distribution

      - name: Extract metadata (tags, labels) for source image
        id: metasource
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME_SOURCE }}
          flavor: |
            latest=true
          tags: |
            type=raw,value={{branch}},priority=1,enable=${{ !startsWith(github.ref, 'refs/tags/v') }}
            type=ref,event=tag,priority=2
            type=raw,value=${{ env.IMAGE_NAME }}-{{branch}}-{{date 'YYYYMMDD'}}-{{sha}},priority=31,enable=${{ !startsWith(github.ref, 'refs/tags/v') }}
            type=raw,value=${{ env.IMAGE_NAME }}-{{tag}}-{{date 'YYYYMMDD'}}-{{sha}},priority=32, enable=${{ startsWith(github.ref, 'refs/tags/v') }}
      
      - name: Build and push source image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/Dockerfile.osadl.debian
          platforms: linux/amd64
          cache-from: type=gha
          build-args: |
                  FFMPEG_BREW_OPTIONS=--without-fdk-aac
          push: true
          tags: ${{ steps.metasource.outputs.tags }}
          labels: ${{ steps.metasource.outputs.labels }}
          target: source
